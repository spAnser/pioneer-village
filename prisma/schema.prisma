generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Accounts {
  id                 Int          @id @default(autoincrement())
  allowed            Boolean      @default(true)
  priority           Int          @default(10)
  identifier_steam   String       @unique
  identifier_fivem   String?      @unique
  identifier_discord String?      @unique
  identifier_ip      String?
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  bannedAt           DateTime?
  role               Role         @default(USER)
  characters         Characters[]
}

model Characters {
  id             Int        @id @default(autoincrement())
  accountId      Int
  firstName      String
  lastName       String
  dateOfBirth    DateTime
  createdAt      DateTime   @default(now())
  deletedAt      DateTime?
  lastX          Decimal    @default(0.0)
  lastY          Decimal    @default(0.0)
  lastZ          Decimal    @default(0.0)
  food           Decimal    @default(100.0)
  drink          Decimal    @default(100.0)
  currencies     Json       @default("{\"dollars\": 20, \"gold\": 0}")
  healthMetadata Json       @default("{\"health\": 100, \"stamina\": 100, \"litersOfBlood\": 5, \"boneHealth\": [], \"activeTonic\": false, \"sick\": false, \"boneStatus\": []}")
  components     Json       @default("[]")
  model          String     @default("mp_male")
  whistle        Json       @default("{\"pitch\": 0.5, \"shape\": 5, \"clarity\": 0.5}")
  brand          Brands?
  account        Accounts   @relation(fields: [accountId], references: [id])
  face           Faces?
  horses         Horses[]
  livestock      Livestock?
  outfits        Outfits[]
}

model Faces {
  id               Int        @id @default(autoincrement())
  characterId      Int        @unique
  noseHeight       Decimal    @default(0.0)
  lowerLipWidth    Decimal    @default(0.0)
  upperLipHeight   Decimal    @default(0.0)
  earlobeSize      Decimal    @default(0.0)
  lowerLipHeight   Decimal    @default(0.0)
  eyebrowHeight    Decimal    @default(0.0)
  jawHeight        Decimal    @default(0.0)
  eyesDistance     Decimal    @default(0.0)
  mouthDepth       Decimal    @default(0.0)
  mouthWidth       Decimal    @default(0.0)
  noseCurvature    Decimal    @default(0.0)
  eyebrowDepth     Decimal    @default(0.0)
  earsHeight       Decimal    @default(0.0)
  noseSize         Decimal    @default(0.0)
  headWidth        Decimal    @default(0.0)
  eyelidWidth      Decimal    @default(0.0)
  mouthYPos        Decimal    @default(0.0)
  earsWidth        Decimal    @default(0.0)
  jawWidth         Decimal    @default(0.0)
  nostrilsDistance Decimal    @default(0.0)
  noseWidth        Decimal    @default(0.0)
  eyesHeight       Decimal    @default(0.0)
  chinHeight       Decimal    @default(0.0)
  upperLipWidth    Decimal    @default(0.0)
  eyebrowWidth     Decimal    @default(0.0)
  cheekBoneWidth   Decimal    @default(0.0)
  chinWidth        Decimal    @default(0.0)
  eyesAngle        Decimal    @default(0.0)
  earsAngle        Decimal    @default(0.0)
  jawDepth         Decimal    @default(0.0)
  eyelidHeight     Decimal    @default(0.0)
  cheekBoneHeight  Decimal    @default(0.0)
  chinDepth        Decimal    @default(0.0)
  cheekBoneDepth   Decimal    @default(0.0)
  upperLipDepth    Decimal    @default(0.0)
  noseAngle        Decimal    @default(0.0)
  mouthXPos        Decimal    @default(0.0)
  lowerLipDepth    Decimal    @default(0.0)
  eyesDepth        Decimal    @default(0.0)
  overlays         Json?
  character        Characters @relation(fields: [characterId], references: [id])
}

model Outfits {
  id          Int        @id @default(autoincrement())
  characterId Int
  name        String
  components  Json       @default("[]")
  character   Characters @relation(fields: [characterId], references: [id])
}

model Horses {
  id               Int        @id @default(autoincrement())
  name             String
  ownerId          Int
  stable           String?
  brandId          Int?
  breeds           Json
  components       Json       @default("[]")
  model            Int
  gender           Gender
  age              Int
  weight           Decimal
  food             Decimal    @default(100.0)
  water            Decimal    @default(100.0)
  health           Decimal    @default(100.0)
  cleanliness      Decimal    @default(100.0)
  neuteredFixed    Boolean    @default(false)
  statOffRoad      Int
  statHealth       Int
  statEndurance    Int
  statFertility    Int
  statHandling     Int
  statSpeed        Int
  statAcceleration Int
  statBonding      Json?
  hooves           Decimal
  horseshoes       Decimal    @default(0.0)
  metadata         Json?
  lastX            Decimal
  lastY            Decimal
  lastZ            Decimal
  createdAt        DateTime   @default(now())
  brand            Brands?    @relation(fields: [brandId], references: [id])
  owner            Characters @relation(fields: [ownerId], references: [id])
}

model Livestock {
  id      Int        @id @default(autoincrement())
  name    String
  ownerId Int        @unique
  model   Int
  brandId Int
  lastX   Decimal
  lastY   Decimal
  lastZ   Decimal
  brand   Brands     @relation(fields: [brandId], references: [id])
  owner   Characters @relation(fields: [ownerId], references: [id])
}

model Brands {
  id         Int         @id @default(autoincrement())
  name       String
  identifier String
  ownerId    Int         @unique
  createdAt  DateTime    @default(now())
  owner      Characters  @relation(fields: [ownerId], references: [id])
  horses     Horses[]
  livestock  Livestock[]
}

model Inventory {
  id          Int       @id @default(autoincrement())
  identifier  String    @unique
  metadata    Json      @default("{}")
  containerId Int       @unique
  container   Container @relation(fields: [containerId], references: [id])
}

model Container {
  id        Int        @id @default(autoincrement())
  locked    Boolean    @default(false)
  sealed    Sealed     @default(NONE)
  Inventory Inventory?
  Item      Item[]
}

model Item {
  id          Int       @id @default(autoincrement())
  metadata    Json      @default("{}")
  containerId Int
  createdAt   DateTime  @default(now())
  deletedAt   DateTime?
  identifier  Int
  slot        Int?
  container   Container @relation(fields: [containerId], references: [id])
}

model Door {
  id    Int @id @default(autoincrement())
  hash  Int
  state Int @default(-1) @db.SmallInt
}

enum Role {
  USER
  DEVELOPER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Sealed {
  NONE
  SEALED
  BROKEN
}
